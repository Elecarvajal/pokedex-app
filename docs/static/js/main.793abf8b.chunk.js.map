{"version":3,"sources":["components/Navbar.js","components/Header/index.js","components/Searchbar/index.js","components/Loading.js","components/PokeCard/index.js","components/PokeGrid/index.js","helpers/fetchPokemon.js","helpers/fetchAllPokemons.js","pages/HomePage.js","hooks/usePokemons.js","PokedexApp.js","index.js"],"names":["Navbar","pokemons","search","currentPage","setCurrentPage","className","onClick","src","alt","filter","pokemon","name","includes","length","Header","props","style","backgroundImage","Searchbar","setSearch","type","placeholder","value","onChange","target","Loading","PokeCard","id","img","firstType","secondType","useState","loaded","setLoaded","onLoad","PokeGrid","isLoading","map","fetchPokemon","url","a","fetch","res","json","data","fetchAllPokemons","results","promises","poke","Promise","all","pokeData","transformPokeDataIntoPokemons","sprites","types","other","front_default","HomePage","setIsLoading","setPokemons","useEffect","then","usePokemons","slice","toLowerCase","toString","PokedexApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.793abf8b.chunk.js","sourcesContent":["export const Navbar = ({ pokemons, search, currentPage, setCurrentPage }) => {\r\n  const nextPage = () => {\r\n    if (\r\n      pokemons.filter((pokemon) => pokemon.name.includes(search)).length >\r\n      currentPage + 5\r\n    )\r\n      setCurrentPage(currentPage + 5);\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 0) setCurrentPage(currentPage - 5);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"nav\">\r\n        <div className=\"nav-item prev\" onClick={prevPage}>\r\n          <img src={'./assets/nav/previous.png'} alt=\"left-arrow\" />\r\n        </div>\r\n        <div className=\"nav-item\" onClick={nextPage}>\r\n          <img src={'./assets/nav/next.png'} alt=\"right-arrow\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Navbar } from '../Navbar';\r\n\r\nimport './Header.css';\r\n\r\nexport const Header = (props) => {\r\n  return (\r\n    <div\r\n      className=\"header\"\r\n      style={{ backgroundImage: \"url('./assets/backgrounds/header.png')\" }}\r\n    >\r\n      <div className=\"container\">\r\n        <Navbar {...props} />\r\n        <h1 className=\"title\">Pok√©dex</h1>\r\n        <p className=\"description\">\r\n          Search for Pok√©mon by name or using the National Pok√©dex number.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import './Searchbar.css';\r\n\r\nexport const Searchbar = ({ search, setSearch, setCurrentPage }) => {\r\n  const onSearchChange = ({ target }) => {\r\n    setCurrentPage(0);\r\n    setSearch(target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"functionalities\">\r\n      <div className=\"container\">\r\n        <div className=\"searchbar\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"What Pok√©mon are you looking for?\"\r\n            value={search}\r\n            onChange={onSearchChange}\r\n          />\r\n          <img\r\n            src=\"./assets/backgrounds/search.png\"\r\n            alt=\"search-logo\"\r\n            className=\"searchbar-logo\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const Loading = () => {\r\n  return (\r\n    <>\r\n      <h3>Loading pok√©mon...</h3>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport './PokeCard.css';\r\n\r\nexport const PokeCard = ({ id, name, img, firstType, secondType }) => {\r\n  const [loaded, setLoaded] = useState('');\r\n\r\n  return (\r\n    <div className={`poke-card bg-${firstType}`}>\r\n      <div\r\n        className=\"poke-data\"\r\n        style={{ backgroundImage: \"url('./assets/backgrounds/dots.png')\" }}\r\n      >\r\n        <p className=\"poke-id\">#{id}</p>\r\n        <p className=\"poke-name\">{name}</p>\r\n        <div className=\"poke-types\">\r\n          <div className={`type ${firstType}`}>\r\n            <img\r\n              className=\"type-icon\"\r\n              src={`./assets/badges/${firstType}.svg`}\r\n              alt=\"badge\"\r\n            />\r\n            {firstType}\r\n          </div>\r\n          {secondType && (\r\n            <div className={`type ${secondType}`}>\r\n              <img\r\n                className=\"type-icon\"\r\n                src={`./assets/badges/${secondType}.svg`}\r\n                alt=\"badge\"\r\n              />\r\n              {secondType}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"poke-container-image\">\r\n        <img\r\n          src={img}\r\n          alt={name}\r\n          className={`pokemon ${loaded}`}\r\n          onLoad={() => setLoaded('fade-in')}\r\n        />\r\n        <img\r\n          className=\"pokeball\"\r\n          src={'./assets/backgrounds/pokeball.png'}\r\n          alt=\"pokeball\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Loading } from '../Loading';\r\nimport { PokeCard } from '../PokeCard';\r\n\r\nimport './PokeGrid.css';\r\n\r\nexport const PokeGrid = ({ pokemons, isLoading }) => {\r\n  if (isLoading)\r\n    return (\r\n      <div className=\"container\">\r\n        <Loading />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"poke-grid container\">\r\n      {pokemons.length > 0 ? (\r\n        pokemons.map((pokemon) => <PokeCard key={pokemon.id} {...pokemon} />)\r\n      ) : (\r\n        <div>- Oh sorry we didn't find that pokemon üôÅ -</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const fetchPokemon = async (url) => {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n","import { fetchPokemon } from './fetchPokemon';\r\n\r\nexport const fetchAllPokemons = async () => {\r\n  const url = 'https://pokeapi.co/api/v2/pokemon?limit=898';\r\n  const res = await fetch(url);\r\n  const { results } = await res.json();\r\n  const promises = results.map(async (poke) => fetchPokemon(poke.url));\r\n  const pokeData = await Promise.all(promises);\r\n  return transformPokeDataIntoPokemons(pokeData);\r\n};\r\n\r\nconst transformPokeDataIntoPokemons = (data) => {\r\n  const pokemons = data.map(({ id, name, sprites, types }) => {\r\n    const img = sprites.other['official-artwork'].front_default;\r\n    const firstType = types[0].type.name;\r\n    const secondType = types[1]?.type.name;\r\n    return { id, name, img, firstType, secondType };\r\n  });\r\n  return pokemons;\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport { Header } from '../components/Header';\r\nimport { Searchbar } from '../components/Searchbar';\r\nimport { PokeGrid } from '../components/PokeGrid';\r\n\r\nimport { usePokemons } from '../hooks/usePokemons';\r\n\r\nexport const HomePage = () => {\r\n  const { isLoading, pokemons } = usePokemons();\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [search, setSearch] = useState('');\r\n\r\n  const filteredPokemons = () => {\r\n    if (search.length === 0)\r\n      return pokemons.slice(currentPage, currentPage + 5);\r\n\r\n    const filtered = pokemons.filter(\r\n      (pokemon) =>\r\n        pokemon.name.includes(search.toLowerCase()) |\r\n        (pokemon.id.toString() === search)\r\n    );\r\n\r\n    return filtered.slice(currentPage, currentPage + 5);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        pokemons={pokemons}\r\n        search={search}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <Searchbar\r\n        search={search}\r\n        setSearch={setSearch}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <PokeGrid pokemons={filteredPokemons()} isLoading={isLoading} />\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { fetchAllPokemons } from '../helpers/fetchAllPokemons';\r\n\r\nexport const usePokemons = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchAllPokemons().then((pokemons) => {\r\n      setIsLoading(false);\r\n      setPokemons(pokemons);\r\n    });\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    pokemons,\r\n  };\r\n};\r\n","import { HomePage } from './pages/HomePage';\r\n\r\nexport const PokedexApp = () => {\r\n  return <HomePage />;\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PokedexApp } from './PokedexApp';\n\nReactDOM.render(<PokedexApp />, document.getElementById('root'));\n"],"sourceRoot":""}