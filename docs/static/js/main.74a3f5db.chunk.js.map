{"version":3,"sources":["components/Header.js","components/Loading.js","components/PokeCard.js","components/PokeGrid.js","helpers/fetchPokemon.js","helpers/fetchAllPokemons.js","PokedexApp.js","hooks/usePokemons.js","index.js"],"names":["Header","nextPage","prevPage","className","style","backgroundImage","onClick","Loading","PokeCard","id","name","img","firstType","secondType","useState","loaded","setLoaded","src","alt","onLoad","PokeGrid","pokemons","isLoading","length","map","pokemon","fetchPokemon","url","a","fetch","res","json","data","fetchAllPokemons","results","promises","poke","Promise","all","pokeData","transformPokeDataIntoPokemons","sprites","types","other","front_default","type","PokedexApp","setIsLoading","setPokemons","useEffect","then","usePokemons","currentPage","setCurrentPage","search","setSearch","filter","includes","placeholder","value","onChange","target","slice","toLowerCase","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74a3f5db.chunk.js","sourcesContent":["export const Header = ({ nextPage, prevPage }) => {\r\n  return (\r\n    <div\r\n      className=\"header\"\r\n      style={{ backgroundImage: \"url('./assets/backgrounds/header.png')\" }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"pagination\">\r\n          <button className=\"btn prev\" onClick={prevPage}>\r\n            ‚áê\r\n          </button>\r\n          <button className=\"btn next\" onClick={nextPage}>\r\n            ‚áí\r\n          </button>\r\n        </div>\r\n        <h1 className=\"title\">Pok√©dex</h1>\r\n        <p className=\"description\">\r\n          Search for Pok√©mon by name or using the National Pok√©dex number.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const Loading = () => {\r\n  return (\r\n    <>\r\n      <h3>Loading pok√©mon...</h3>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const PokeCard = ({ id, name, img, firstType, secondType }) => {\r\n  const [loaded, setLoaded] = useState('');\r\n\r\n  return (\r\n    <div className={`poke-card bg-${firstType}`}>\r\n      <div\r\n        className=\"poke-data\"\r\n        style={{ backgroundImage: \"url('./assets/backgrounds/dots.png')\" }}\r\n      >\r\n        <p className=\"poke-id\">#{id}</p>\r\n        <p className=\"poke-name\">{name}</p>\r\n        <div className=\"poke-types\">\r\n          <div className={`type ${firstType}`}>\r\n            <img\r\n              className=\"type-icon\"\r\n              src={`./assets/badges/${firstType}.svg`}\r\n              alt=\"badge\"\r\n            />\r\n            {firstType}\r\n          </div>\r\n          {secondType && (\r\n            <div className={`type ${secondType}`}>\r\n              <img\r\n                className=\"type-icon\"\r\n                src={`./assets/badges/${secondType}.svg`}\r\n                alt=\"badge\"\r\n              />\r\n              {secondType}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"poke-container-image\"\r\n        style={{ backgroundImage: \"url('./assets/backgrounds/pokeball.png')\" }}\r\n      >\r\n        <img\r\n          src={img}\r\n          alt={name}\r\n          className={loaded}\r\n          onLoad={() => setLoaded('fade-in')}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Loading } from './Loading';\r\nimport { PokeCard } from './PokeCard';\r\n\r\nexport const PokeGrid = ({ pokemons, isLoading }) => {\r\n  if (isLoading)\r\n    return (\r\n      <div className=\"container\">\r\n        <Loading />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"poke-grid container\">\r\n      {pokemons.length > 0 ? (\r\n        pokemons.map((pokemon) => <PokeCard key={pokemon.id} {...pokemon} />)\r\n      ) : (\r\n        <div>- Oh sorry we didn't find that pokemon üôÅ -</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const fetchPokemon = async (url) => {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n","import { fetchPokemon } from './fetchPokemon';\r\n\r\nexport const fetchAllPokemons = async () => {\r\n  const url = 'https://pokeapi.co/api/v2/pokemon?limit=898';\r\n  const res = await fetch(url);\r\n  const { results } = await res.json();\r\n  const promises = results.map(async (poke) => fetchPokemon(poke.url));\r\n  const pokeData = await Promise.all(promises);\r\n  return transformPokeDataIntoPokemons(pokeData);\r\n};\r\n\r\nconst transformPokeDataIntoPokemons = (data) => {\r\n  const pokemons = data.map(({ id, name, sprites, types }) => {\r\n    const img = sprites.other['official-artwork'].front_default;\r\n    const firstType = types[0].type.name;\r\n    const secondType = types[1]?.type.name;\r\n    return { id, name, img, firstType, secondType };\r\n  });\r\n  return pokemons;\r\n};\r\n","import { useState } from 'react';\r\nimport { Header } from './components/Header';\r\nimport { PokeGrid } from './components/PokeGrid';\r\nimport { usePokemons } from './hooks/usePokemons';\r\n\r\nexport const PokedexApp = () => {\r\n  const { isLoading, pokemons } = usePokemons();\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [search, setSearch] = useState('');\r\n\r\n  const filteredPokemons = () => {\r\n    if (search.length === 0)\r\n      return pokemons.slice(currentPage, currentPage + 5);\r\n\r\n    const filtered = pokemons.filter(\r\n      (pokemon) =>\r\n        pokemon.name.includes(search.toLowerCase()) |\r\n        (pokemon.id.toString() === search)\r\n    );\r\n\r\n    return filtered.slice(currentPage, currentPage + 5);\r\n  };\r\n\r\n  const nextPage = () => {\r\n    if (\r\n      pokemons.filter((pokemon) => pokemon.name.includes(search)).length >\r\n      currentPage + 5\r\n    )\r\n      setCurrentPage(currentPage + 5);\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 0) setCurrentPage(currentPage - 5);\r\n  };\r\n\r\n  const onSearchChange = ({ target }) => {\r\n    setCurrentPage(0);\r\n    setSearch(target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header nextPage={nextPage} prevPage={prevPage} />\r\n      <div className=\"functionalities\">\r\n        <div className=\"container\">\r\n          <div className=\"searchbar\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"What Pok√©mon are you looking for?\"\r\n              value={search}\r\n              onChange={onSearchChange}\r\n            />\r\n            <img\r\n              src=\"./assets/backgrounds/search.png\"\r\n              alt=\"searchbar-logo\"\r\n              className=\"searchbar-logo\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <PokeGrid pokemons={filteredPokemons()} isLoading={isLoading} />\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { fetchAllPokemons } from '../helpers/fetchAllPokemons';\r\n\r\nexport const usePokemons = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchAllPokemons().then((pokemons) => {\r\n      setIsLoading(false);\r\n      setPokemons(pokemons);\r\n    });\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    pokemons,\r\n  };\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PokedexApp } from './PokedexApp';\n\nReactDOM.render(<PokedexApp />, document.getElementById('root'));\n"],"sourceRoot":""}